#! /usr/bin/env python

PACKAGE='airlab_segment'

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()
#       Name                                  Type         Lvl  Description                                                            Default, Min, Max
gen.add("plane_min_inliers",                  int_t,       0,   "Minimum number of points for counting a segment as a plane to exclude", 10000,   500, 50000)
gen.add("cluster_min_inliers",                int_t,       0,   "Minimum number of points of a segment to be published",                   200,    10,  5000)
gen.add("cluster_max_inliers",                int_t,       0,   "Minimum number of points of a segment to be published",                 15000,   100, 20000)
gen.add("filter_min_depth",                   double_t,    0,   "The lower limit of passthrough depth filter in metres",                   0.3,   0.0,   5.0)
gen.add("filter_max_depth",                   double_t,    0,   "The upper limit of passthrough depth filter in metres",                   1.5,   0.0,   5.0)
gen.add("euclidean_distance_threshold",       double_t,    0,   "Maximum distance for including a outlier point in a euclidean segment",  0.02, 0.001,  0.04)
gen.add("region_growing_min_inliers",         int_t,       0,   "The minimum number of a segment for region growing segmentation",          30,    10,  5000)
gen.add("region_growing_point_color_thresh",  int_t,       0,   "The maximum color distance for including a point into a region",            5,     1,   128)
gen.add("region_growing_region_color_thresh", int_t,       0,   "The maximum color distance for merging a region with another",              6,     1,   128)
gen.add("region_growing_distance_threshold",  double_t,    0,   "The max distance threshold for including a point to a grown region",     0.02, 0.001,  0.04)


#gen.add("cloud_in",            str_t,       0,        "Input cloud",              "/camera/depth_registered/points")

exit(gen.generate(PACKAGE, "airlab_segment", "SegmentParams"))
